// Auto-generated by py/games/blokus/cpp_writer.py

#include <games/blokus/Constants.hpp>
#include <games/blokus/Pieces.hpp>

namespace blokus {

const Piece kPieces[kNumPieces] = {

  // pO1
  //
  // x
  Piece("O1", pO1, 0, gC1, 0b1),

  // pI2
  //
  // x
  // x
  Piece("I2", pI2, 1, gC2, 0b11),

  // pI3
  //
  // x
  // x
  // x
  Piece("I3", pI3, 3, gC2, 0b111),

  // pL3
  //
  // x 
  // xx
  Piece("L3", pL3, 5, gC4, 0b11, 0b1),

  // pI4
  //
  // x
  // x
  // x
  // x
  Piece("I4", pI4, 9, gC2, 0b1111),

  // pO4
  //
  // xx
  // xx
  Piece("O4", pO4, 11, gC1, 0b11, 0b11),

  // pT4
  //
  // x 
  // xx
  // x 
  Piece("T4", pT4, 12, gC4, 0b111, 0b10),

  // pL4
  //
  // x 
  // x 
  // xx
  Piece("L4", pL4, 16, gD4, 0b111, 0b1),

  // pS4
  //
  //  x
  // xx
  // x 
  Piece("S4", pS4, 24, gD2, 0b11, 0b110),

  // pF5
  //
  //  x 
  // xxx
  // x  
  Piece("F5", pF5, 28, gD4, 0b11, 0b110, 0b10),

  // pI5
  //
  // x
  // x
  // x
  // x
  // x
  Piece("I5", pI5, 36, gC2, 0b11111),

  // pL5
  //
  // x 
  // x 
  // x 
  // xx
  Piece("L5", pL5, 38, gD4, 0b1111, 0b1),

  // pN5
  //
  //  x
  // xx
  // x 
  // x 
  Piece("N5", pN5, 46, gD4, 0b111, 0b1100),

  // pP5
  //
  // x 
  // xx
  // xx
  Piece("P5", pP5, 54, gD4, 0b111, 0b11),

  // pT5
  //
  // x  
  // xxx
  // x  
  Piece("T5", pT5, 62, gC4, 0b111, 0b10, 0b10),

  // pU5
  //
  // xx
  // x 
  // xx
  Piece("U5", pU5, 66, gC4, 0b111, 0b101),

  // pV5
  //
  // x  
  // x  
  // xxx
  Piece("V5", pV5, 70, gC4, 0b111, 0b1, 0b1),

  // pW5
  //
  //  xx
  // xx 
  // x  
  Piece("W5", pW5, 74, gC4, 0b11, 0b110, 0b100),

  // pX5
  //
  //  x 
  // xxx
  //  x 
  Piece("X5", pX5, 78, gC1, 0b10, 0b111, 0b10),

  // pY5
  //
  // x 
  // x 
  // xx
  // x 
  Piece("Y5", pY5, 79, gD4, 0b1111, 0b10),

  // pZ5
  //
  //   x
  // xxx
  // x  
  Piece("Z5", pZ5, 87, gD2, 0b11, 0b10, 0b110)
};  // kPieces

const PieceOrientation kPieceOrientations[kNumPieceOrientations] = {

  // pO1/0
  //
  // x
  PieceOrientation(0, pO1, 0, 0b1),

  // pI2/0
  //
  // x
  // x
  PieceOrientation(1, pI2, 0, 0b11),

  // pI2/1
  //
  // xx
  PieceOrientation(2, pI2, 1, 0b1, 0b1),

  // pI3/0
  //
  // x
  // x
  // x
  PieceOrientation(3, pI3, 0, 0b111),

  // pI3/1
  //
  // xxx
  PieceOrientation(4, pI3, 1, 0b1, 0b1, 0b1),

  // pL3/0
  //
  // x 
  // xx
  PieceOrientation(5, pL3, 0, 0b11, 0b1),

  // pL3/1
  //
  // xx
  // x 
  PieceOrientation(6, pL3, 1, 0b11, 0b10),

  // pL3/2
  //
  // xx
  //  x
  PieceOrientation(7, pL3, 2, 0b10, 0b11),

  // pL3/3
  //
  //  x
  // xx
  PieceOrientation(8, pL3, 3, 0b1, 0b11),

  // pI4/0
  //
  // x
  // x
  // x
  // x
  PieceOrientation(9, pI4, 0, 0b1111),

  // pI4/1
  //
  // xxxx
  PieceOrientation(10, pI4, 1, 0b1, 0b1, 0b1, 0b1),

  // pO4/0
  //
  // xx
  // xx
  PieceOrientation(11, pO4, 0, 0b11, 0b11),

  // pT4/0
  //
  // x 
  // xx
  // x 
  PieceOrientation(12, pT4, 0, 0b111, 0b10),

  // pT4/1
  //
  // xxx
  //  x 
  PieceOrientation(13, pT4, 1, 0b10, 0b11, 0b10),

  // pT4/2
  //
  //  x
  // xx
  //  x
  PieceOrientation(14, pT4, 2, 0b10, 0b111),

  // pT4/3
  //
  //  x 
  // xxx
  PieceOrientation(15, pT4, 3, 0b1, 0b11, 0b1),

  // pL4/0
  //
  // x 
  // x 
  // xx
  PieceOrientation(16, pL4, 0, 0b111, 0b1),

  // pL4/1
  //
  // xxx
  // x  
  PieceOrientation(17, pL4, 1, 0b11, 0b10, 0b10),

  // pL4/2
  //
  // xx
  //  x
  //  x
  PieceOrientation(18, pL4, 2, 0b100, 0b111),

  // pL4/3
  //
  //   x
  // xxx
  PieceOrientation(19, pL4, 3, 0b1, 0b1, 0b11),

  // pL4/4
  //
  // xx
  // x 
  // x 
  PieceOrientation(20, pL4, 4, 0b111, 0b100),

  // pL4/5
  //
  // xxx
  //   x
  PieceOrientation(21, pL4, 5, 0b10, 0b10, 0b11),

  // pL4/6
  //
  //  x
  //  x
  // xx
  PieceOrientation(22, pL4, 6, 0b1, 0b111),

  // pL4/7
  //
  // x  
  // xxx
  PieceOrientation(23, pL4, 7, 0b11, 0b1, 0b1),

  // pS4/0
  //
  //  x
  // xx
  // x 
  PieceOrientation(24, pS4, 0, 0b11, 0b110),

  // pS4/1
  //
  // xx 
  //  xx
  PieceOrientation(25, pS4, 1, 0b10, 0b11, 0b1),

  // pS4/4
  //
  // x 
  // xx
  //  x
  PieceOrientation(26, pS4, 4, 0b110, 0b11),

  // pS4/5
  //
  //  xx
  // xx 
  PieceOrientation(27, pS4, 5, 0b1, 0b11, 0b10),

  // pF5/0
  //
  //  x 
  // xxx
  // x  
  PieceOrientation(28, pF5, 0, 0b11, 0b110, 0b10),

  // pF5/1
  //
  // xx 
  //  xx
  //  x 
  PieceOrientation(29, pF5, 1, 0b100, 0b111, 0b10),

  // pF5/2
  //
  //   x
  // xxx
  //  x 
  PieceOrientation(30, pF5, 2, 0b10, 0b11, 0b110),

  // pF5/3
  //
  //  x 
  // xx 
  //  xx
  PieceOrientation(31, pF5, 3, 0b10, 0b111, 0b1),

  // pF5/4
  //
  // x  
  // xxx
  //  x 
  PieceOrientation(32, pF5, 4, 0b110, 0b11, 0b10),

  // pF5/5
  //
  //  xx
  // xx 
  //  x 
  PieceOrientation(33, pF5, 5, 0b10, 0b111, 0b100),

  // pF5/6
  //
  //  x 
  // xxx
  //   x
  PieceOrientation(34, pF5, 6, 0b10, 0b110, 0b11),

  // pF5/7
  //
  //  x 
  //  xx
  // xx 
  PieceOrientation(35, pF5, 7, 0b1, 0b111, 0b10),

  // pI5/0
  //
  // x
  // x
  // x
  // x
  // x
  PieceOrientation(36, pI5, 0, 0b11111),

  // pI5/1
  //
  // xxxxx
  PieceOrientation(37, pI5, 1, 0b1, 0b1, 0b1, 0b1, 0b1),

  // pL5/0
  //
  // x 
  // x 
  // x 
  // xx
  PieceOrientation(38, pL5, 0, 0b1111, 0b1),

  // pL5/1
  //
  // xxxx
  // x   
  PieceOrientation(39, pL5, 1, 0b11, 0b10, 0b10, 0b10),

  // pL5/2
  //
  // xx
  //  x
  //  x
  //  x
  PieceOrientation(40, pL5, 2, 0b1000, 0b1111),

  // pL5/3
  //
  //    x
  // xxxx
  PieceOrientation(41, pL5, 3, 0b1, 0b1, 0b1, 0b11),

  // pL5/4
  //
  // xx
  // x 
  // x 
  // x 
  PieceOrientation(42, pL5, 4, 0b1111, 0b1000),

  // pL5/5
  //
  // xxxx
  //    x
  PieceOrientation(43, pL5, 5, 0b10, 0b10, 0b10, 0b11),

  // pL5/6
  //
  //  x
  //  x
  //  x
  // xx
  PieceOrientation(44, pL5, 6, 0b1, 0b1111),

  // pL5/7
  //
  // x   
  // xxxx
  PieceOrientation(45, pL5, 7, 0b11, 0b1, 0b1, 0b1),

  // pN5/0
  //
  //  x
  // xx
  // x 
  // x 
  PieceOrientation(46, pN5, 0, 0b111, 0b1100),

  // pN5/1
  //
  // xxx 
  //   xx
  PieceOrientation(47, pN5, 1, 0b10, 0b10, 0b11, 0b1),

  // pN5/2
  //
  //  x
  //  x
  // xx
  // x 
  PieceOrientation(48, pN5, 2, 0b11, 0b1110),

  // pN5/3
  //
  // xx  
  //  xxx
  PieceOrientation(49, pN5, 3, 0b10, 0b11, 0b1, 0b1),

  // pN5/4
  //
  // x 
  // x 
  // xx
  //  x
  PieceOrientation(50, pN5, 4, 0b1110, 0b11),

  // pN5/5
  //
  //  xxx
  // xx  
  PieceOrientation(51, pN5, 5, 0b1, 0b11, 0b10, 0b10),

  // pN5/6
  //
  // x 
  // xx
  //  x
  //  x
  PieceOrientation(52, pN5, 6, 0b1100, 0b111),

  // pN5/7
  //
  //   xx
  // xxx 
  PieceOrientation(53, pN5, 7, 0b1, 0b1, 0b11, 0b10),

  // pP5/0
  //
  // x 
  // xx
  // xx
  PieceOrientation(54, pP5, 0, 0b111, 0b11),

  // pP5/1
  //
  // xxx
  // xx 
  PieceOrientation(55, pP5, 1, 0b11, 0b11, 0b10),

  // pP5/2
  //
  // xx
  // xx
  //  x
  PieceOrientation(56, pP5, 2, 0b110, 0b111),

  // pP5/3
  //
  //  xx
  // xxx
  PieceOrientation(57, pP5, 3, 0b1, 0b11, 0b11),

  // pP5/4
  //
  // xx
  // xx
  // x 
  PieceOrientation(58, pP5, 4, 0b111, 0b110),

  // pP5/5
  //
  // xxx
  //  xx
  PieceOrientation(59, pP5, 5, 0b10, 0b11, 0b11),

  // pP5/6
  //
  //  x
  // xx
  // xx
  PieceOrientation(60, pP5, 6, 0b11, 0b111),

  // pP5/7
  //
  // xx 
  // xxx
  PieceOrientation(61, pP5, 7, 0b11, 0b11, 0b1),

  // pT5/0
  //
  // x  
  // xxx
  // x  
  PieceOrientation(62, pT5, 0, 0b111, 0b10, 0b10),

  // pT5/1
  //
  // xxx
  //  x 
  //  x 
  PieceOrientation(63, pT5, 1, 0b100, 0b111, 0b100),

  // pT5/2
  //
  //   x
  // xxx
  //   x
  PieceOrientation(64, pT5, 2, 0b10, 0b10, 0b111),

  // pT5/3
  //
  //  x 
  //  x 
  // xxx
  PieceOrientation(65, pT5, 3, 0b1, 0b111, 0b1),

  // pU5/0
  //
  // xx
  // x 
  // xx
  PieceOrientation(66, pU5, 0, 0b111, 0b101),

  // pU5/1
  //
  // xxx
  // x x
  PieceOrientation(67, pU5, 1, 0b11, 0b10, 0b11),

  // pU5/2
  //
  // xx
  //  x
  // xx
  PieceOrientation(68, pU5, 2, 0b101, 0b111),

  // pU5/3
  //
  // x x
  // xxx
  PieceOrientation(69, pU5, 3, 0b11, 0b1, 0b11),

  // pV5/0
  //
  // x  
  // x  
  // xxx
  PieceOrientation(70, pV5, 0, 0b111, 0b1, 0b1),

  // pV5/1
  //
  // xxx
  // x  
  // x  
  PieceOrientation(71, pV5, 1, 0b111, 0b100, 0b100),

  // pV5/2
  //
  // xxx
  //   x
  //   x
  PieceOrientation(72, pV5, 2, 0b100, 0b100, 0b111),

  // pV5/3
  //
  //   x
  //   x
  // xxx
  PieceOrientation(73, pV5, 3, 0b1, 0b1, 0b111),

  // pW5/0
  //
  //  xx
  // xx 
  // x  
  PieceOrientation(74, pW5, 0, 0b11, 0b110, 0b100),

  // pW5/1
  //
  // xx 
  //  xx
  //   x
  PieceOrientation(75, pW5, 1, 0b100, 0b110, 0b11),

  // pW5/2
  //
  //   x
  //  xx
  // xx 
  PieceOrientation(76, pW5, 2, 0b1, 0b11, 0b110),

  // pW5/3
  //
  // x  
  // xx 
  //  xx
  PieceOrientation(77, pW5, 3, 0b110, 0b11, 0b1),

  // pX5/0
  //
  //  x 
  // xxx
  //  x 
  PieceOrientation(78, pX5, 0, 0b10, 0b111, 0b10),

  // pY5/0
  //
  // x 
  // x 
  // xx
  // x 
  PieceOrientation(79, pY5, 0, 0b1111, 0b10),

  // pY5/1
  //
  // xxxx
  //  x  
  PieceOrientation(80, pY5, 1, 0b10, 0b11, 0b10, 0b10),

  // pY5/2
  //
  //  x
  // xx
  //  x
  //  x
  PieceOrientation(81, pY5, 2, 0b100, 0b1111),

  // pY5/3
  //
  //   x 
  // xxxx
  PieceOrientation(82, pY5, 3, 0b1, 0b1, 0b11, 0b1),

  // pY5/4
  //
  // x 
  // xx
  // x 
  // x 
  PieceOrientation(83, pY5, 4, 0b1111, 0b100),

  // pY5/5
  //
  // xxxx
  //   x 
  PieceOrientation(84, pY5, 5, 0b10, 0b10, 0b11, 0b10),

  // pY5/6
  //
  //  x
  //  x
  // xx
  //  x
  PieceOrientation(85, pY5, 6, 0b10, 0b1111),

  // pY5/7
  //
  //  x  
  // xxxx
  PieceOrientation(86, pY5, 7, 0b1, 0b11, 0b1, 0b1),

  // pZ5/0
  //
  //   x
  // xxx
  // x  
  PieceOrientation(87, pZ5, 0, 0b11, 0b10, 0b110),

  // pZ5/1
  //
  // xx 
  //  x 
  //  xx
  PieceOrientation(88, pZ5, 1, 0b100, 0b111, 0b1),

  // pZ5/4
  //
  // x  
  // xxx
  //   x
  PieceOrientation(89, pZ5, 4, 0b110, 0b10, 0b11),

  // pZ5/5
  //
  //  xx
  //  x 
  // xx 
  PieceOrientation(90, pZ5, 5, 0b1, 0b111, 0b100)
};  // kPieceOrientations

}  // namespace blokus

